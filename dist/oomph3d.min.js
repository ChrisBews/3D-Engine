var Oomph3D = (function (exports) {
  'use strict';

  var Scene = function () {
      function Scene() {
          babelHelpers.classCallCheck(this, Scene);

          this.children = [];
      }

      babelHelpers.createClass(Scene, [{
          key: "addChild",
          value: function addChild(mesh) {
              if (!this.children.includes(mesh)) {
                  this.children.push(mesh);
              }
          }
      }, {
          key: "removeChild",
          value: function removeChild(mesh) {
              this.children = this.children.filter(function (currentMesh) {
                  return currentMesh !== mesh;
              });
          }
      }, {
          key: "addLight",
          value: function addLight(light) {
              if (!this.lights.includes(light)) {
                  this.lights.push(light);
              }
          }
      }, {
          key: "removeLight",
          value: function removeLight(light) {
              this.lights = this.lights.filter(function (currentLight) {
                  return currentLight !== light;
              });
          }
      }, {
          key: "update",
          value: function update(canvasWidth, canvasHeight) {
              if (this.camera && this.camera.resize) {
                  this.camera.resize(canvasWidth, canvasHeight);
              }
          }
      }]);
      return Scene;
  }();

  var Instance = function () {
      function Instance(canvasId) {
          babelHelpers.classCallCheck(this, Instance);

          this.canvas = document.getElementById(canvasId);
      }

      babelHelpers.createClass(Instance, [{
          key: 'scene',
          set: function set(scene) {
              if (!(scene instanceof Scene)) {
                  throw new Error('Cannot set scene, as it is not a valid Scene reference');
              }
              this.activeScene = scene;
          }
      }]);
      return Instance;
  }();

  exports.Instance = Instance;

  return exports;

}({}));
//# sourceMappingURL=oomph3d.min.js.map
